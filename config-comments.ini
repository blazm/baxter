[general]
do_train = True
do_test = True
selected_gpu = '1'
seed = 1
interactive = False

[dataset]
train_dir = 'data\\robobo_real\\'
valid_dir = 'data\\robobo_real_2\\'
test_dir = 'data\\robobo_real_2\\'
;img_shape = (32, 40, 3)
img_shape = (64, 64, 3)
;img_shape = (128, 128, 3)
;img_shape = (256, 320, 3)
img_dim = 32
; TODO: freeze the layers and train multiple times

[synthetic] ; parameters for synthetically generated dataset
; size (proportion) factor of objects in auto generated images 
; (0.3 till 3.0)
size_factor = 3.0
; save first batch into tmp for analysis
save_batch = True
; whether to calculate masks from median image in the data generator
calc_masks = True
; number of iterations to perform dilatation (enlarge) on masks
dilate_masks = 2
; whether to blur masks or not
; (False = hard attention, True = soft attention)
blur_masks = False
blur_kernel = (7,7)
; default mask values for objects and the background (background weight)
obj_attention = 0.8
back_attention = 0.2
; whether to subtract median pixels from the outputting images
subtract_median = False
; whether to add noise to input images (to train as denoising AE)
add_noise = False
noise_amnt = 0.15

[hyperparam]
num_epochs = 29
batch_size = 5
; latent_size is relevant for VAE & dense AE model
latent_size = 4
; number of convolutional blocks to use for encoder and decoder
conv_layers = 4
; number of filteres in each conv block
num_filters = 32
; kernel size of filters in conv block
kernel_size = 3
kernel_mult = 1
; activation type in conv block
conv_act = elu
; relu is shit (too much neurons die and output 0)
; elu is better
; loss: wmse is weighted MSE, mse is weightless MSE
loss = mse
; opt: adam or adamw
opt = adamw
; model can be vae, vaewm, ae_conv or ae_dense
model_label = vaewm

